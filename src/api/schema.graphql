### This file was generated by Nexus Schema
### Do not make changes to this file directly

type CheckoutSessionResult {
  amount: Int!
  id: String!
}

type City {
  label: ID!
  value: String!
}

type Company {
  createdAt: DateTime!
  description: String!
  email: String!
  id: ID!
  jobs: [Job!]!
  name: String!
  slug: String!
  twitter: String
  updatedAt: DateTime!
  viewCount: Int!
  website: String!
}

type CreateBillingPortalSessionResult {
  url: String!
}

input CreateCheckoutSessionInput {
  name: String!
  price: Int!
}

type CreateCheckoutSessionResult {
  sessionUrl: String!
}

input CreateJobInput {
  applyUrl: String!
  description: String!
  position: String!
  remote: Boolean!
  role: String!
  tags: [ID!]!
}

input CreateTagInput {
  name: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input GetCitiesInput {
  country: String!
  query: String!
}

input GetJobsInput {
  query: GetJobsInputQuery!
}

input GetJobsInputQuery {
  remote: Boolean!
  tags: [ID!]!
}

input GetTagsInput {
  notIn: [String!]!
  query: String!
}

type Job {
  applyUrl: String!
  company: Company!
  createdAt: DateTime!
  description: String!
  id: ID!
  liked: Boolean!
  position: String!
  remote: Boolean!
  role: String!
  tags: [Tag!]!
  updatedAt: DateTime!
  viewCount: Int!
}

type Mutation {
  addLike(id: ID!): Job!
  createBillingPortalSession: CreateBillingPortalSessionResult!
  createCheckoutSession(
    input: CreateCheckoutSessionInput!
  ): CreateCheckoutSessionResult!
  createJob(input: CreateJobInput!): Job!
  createTag(input: CreateTagInput!): Tag!
  removeLike(id: ID!): Job!
  updateCompany(input: UpdateCompanyInput!): Company!
  updateJob(input: UpdateJobInput!): Job!
  updateUser(input: UpdateUserInput!): User!
  viewCompany(id: ID!): Company!
  viewJob(id: ID!): Job!
}

type Query {
  checkoutSession(id: ID!): CheckoutSessionResult!
  cities(input: GetCitiesInput!): [City!]!
  companies: [Company!]!
  company(id: ID!): Company!
  companyBySlug(slug: String!): Company!
  job(id: ID!): Job!
  jobs(input: GetJobsInput!): [Job!]!
  tags(input: GetTagsInput!): [Tag!]!
  user: User!
}

type SuccessResult {
  success: Boolean!
}

type Tag {
  count: Int!
  id: ID!
  name: String!
}

input UpdateCompanyInput {
  email: String!
  id: ID!
  name: String!
  twitter: String!
  website: String!
}

input UpdateJobInput {
  applyUrl: String!
  description: String!
  id: ID!
  position: String!
  remote: Boolean!
  role: String!
  tags: [ID!]!
}

input UpdateUserInput {
  name: String!
}

type User {
  company: Company
  email: String
  id: ID!
  jobs: [Job!]!
  likes: [Job!]!
  name: String
}
